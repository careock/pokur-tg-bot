const TelegramBot = require ('node-telegram-bot-api');
const token = "5788161727:AAG6yWHbuwMySGo9PPvbxVt0_EOfJfSGxNI";
const bot = new TelegramBot(token,{polling: true});

textWannaSmoke = "–•–æ—á–µ—à—å –ø–æ–∫—É—Ä?";
chatId1 = "-684468455"

const keyboard = [
    [
      {
        text: "üö¨ –•–æ—á—É –ø–æ–∫—É—Ä!", // —Ç–µ–∫—Å—Ç –Ω–∞ –∫–Ω–æ–ø–∫–µ
        callback_data: 'wannaSmoke' // –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ —Å–æ–±—ã—Ç–∏–π
      }
    ],
  ];

  const keyboard2 = [
    [
        {
            text: 'üü¢ –°–∏–≥–∏ –µ—Å—Ç—å!',
            callback_data: 'haveCig'
        },
        {
            text: 'üî¥ –°–∏–≥ –Ω–µ—Ç',
            callback_data: 'haveNoCig'
        }
    ],
  ];

  const keyboard3 = [
    [
        {
            text: "üî´ –ú–æ–≥—É —Å—Ç—Ä–µ–ª—å–Ω—É—Ç—å",
            callback_data: "canGive"

        },
        {
            text: "üê≠ –£ –º–µ–Ω—è –ø–æ—Å–ª–µ–¥–Ω—è—è",
            callback_data: "canNotGive"

        }
    ],
  ];

  const keyboard4 = [
    [
        {
            text: "üôç‚Äç‚ôÇÔ∏è –•–æ—á—É —Å–∏–≥—É",
            callback_data: "wannaBumCig"

        },
        {
            text: "üë®‚Äç‚ù§Ô∏è‚Äçüë® –•–æ—á—É –¥—É–¥–∫—É",
            callback_data: "wannaBumDudka"

        }
    ],
  ];
  const keyboard5 = [
    [
        {
            text: "üì£ –ó–≤–∞—Ç—å –Ω–∞ –ø–æ–∫—É—Ä!",
            callback_data: "callToSmoke"

        }
    ],
  ]


bot.on('message', (msg) => {
    const chatId = msg.chat.id;
    text = msg.text; 
    if (text === "/start" || text === "–•–æ—á—É –ø–æ–∫—É—Ä!" || text === "—Ö–æ—á—É –ø–æ–∫—É—Ä" || text === "–ø–æ–∫—É—Ä" || text === "–ü–æ–∫—É—Ä" || text === "—Ö–æ—á—É –ø–æ–∫—É—Ä!" ) {
        bot.sendMessage(chatId, textWannaSmoke, { 
            reply_markup: {
                inline_keyboard: keyboard,
            }
        });
    }
    else {return bot.sendMessage (chatId, "–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é, –≥–Ω–∏–¥–∞. –ì–æ–≤–æ—Ä–∏ –ø–æ–Ω—è—Ç–Ω–µ–µ")}
  });
  
  bot.on('callback_query', msg => {
    const fromUsername = msg.from.username;
    console.log (fromUsername)
    const chatId = msg.message.chat.id;
    const data = msg.data;
    const msgId = msg.message.message_id;
    if (data === 'wannaSmoke') { 
       bot.sendMessage (chatId, "–ï—Å—Ç—å —á—Ç–æ –ø–æ–∫—É—Ä–∏—Ç—å?", {
        reply_markup: {
            inline_keyboard: keyboard2
        }
       })
    }

    if (data === 'haveCig') { 
        bot.sendMessage (chatId, "–°—Ç—Ä–µ–ª—å–Ω–µ—à—å, –µ—Å–ª–∏ —á—Ç–æ?", {
         reply_markup: {
             inline_keyboard: keyboard3
         }
        })
     }
     if (data === 'canGive') { 
        bot.sendMessage (chatId, "–í–Ω–∞—Ç—É—Ä–µ —Ç—ã –∫–∞–±–∞–Ω. –ó–æ–≤–µ–º –≤—Å–µ—Ö –Ω–∞ –ø–æ–∫—É—Ä?", {
         reply_markup: {
             inline_keyboard: keyboard5
         }
        })
     }
     if (data === 'canNotGive') { 
        bot.sendMessage (chatId, "–û–∫. –ó–æ–≤–µ–º –≤—Å–µ—Ö –Ω–∞ –ø–æ–∫—É—Ä?", {
         reply_markup: {
             inline_keyboard: keyboard5
         }
        })
     }



     if (data === 'haveNoCig') { 
        bot.sendMessage (chatId, "–ù–µ –≤–æ–ø—Ä–æ—Å, –±—Ä–æ", {
         reply_markup: {
             inline_keyboard: keyboard4
         }
        })
     }
     if (data === 'wannaBumCig') { 
        bot.sendMessage (chatId, "–¢—ã —Ö–æ—á–µ—à—å —Å—Ç—Ä–µ–ª—å–Ω—É—Ç—å —Å–∏–≥—É. –ó–æ–≤–µ–º –≤—Å–µ—Ö –Ω–∞ –ø–æ–∫—É—Ä?", {
         reply_markup: {
             inline_keyboard: keyboard5
         }
        })
     }
     if (data === 'wannaBumDudka') { 
        bot.sendMessage (chatId, "–¢—ã —Ö–æ—á–µ—à—å –ø–æ–∫—É—Ä–∏—Ç—å —á—É–∂—É—é –¥—É–¥–∫—É. –ó–æ–≤–µ–º –≤—Å–µ—Ö –Ω–∞ –ø–æ–∫—É—Ä?", {
         reply_markup: {
             inline_keyboard: keyboard5
         }
        })
     }


    if (data === 'callToSmoke') { 
        bot.sendMessage (chatId, "–í—ã –ø–æ–∑–≤–∞–ª–∏ –≤—Å–µ—Ö –Ω–∞ –ø–æ–∫—É—Ä. –ù–µ –æ–ø–∞–∑–¥—ã–≤–∞–π—Ç–µ", {
        })
        bot.sendMessage (chatId1, "üì£ @" + fromUsername + " –∑–æ–≤–µ—Ç –≤–∞—Å –Ω–∞ –ø–æ–∫—É—Ä!", {
        })
     }
    }
    );


    
    
    /*
     bot.editMessageReplyMarkup ({
            reply_markup: {
                inline_keyboard: keyboard2
            }
        }, 
        {
                chat_id: chatId, 
                message_id: msgId
        });
        
    if (data === 'noCig') { 
        bot.sendMessage (chatId, "–ï—Å—Ç—å —á—Ç–æ –ø–æ–∫—É—Ä–∏—Ç—å?", {
            reply_markup: {
                inline_keyboard: keyboard2
            }
        })
    }
    }
    ); 
  
  bot.on('callback_query', (query) => {
      const chatId = query.message.chat.id;
      let text = '';
  
      if (query.data === 'wannaSmoke') { 
          text = '–Ω—É –∏–¥–∏ –∫—É—Ä–∏ –±–ª—è';
      }


      if (text) {
        bot.sendMessage (chatId, text, {
            reply_markup: {
                inline_keyboard: keyboard2
            }
        })
      }

      if (query.data === 'haveCig') { 
        text = '–∑–∞–µ–±–∏—Å—å, –±—Ä–æ!';
        bot.sendMessage (chatId,text,{
            reply_markup: {
                inline_keyboard: keyboard3
            }
        })
    }
    if (query.data === "haveNoCig") {
        text = "–Ω—É —Ç—ã –∏ —á–µ—Ä—Ç–∏–ª–∞";
        bot.sendMessage (chatId,text,{
            reply_markup: {
                inline_keyboard: keyboard4
            }
        })
    }
    if (query.data === "wannaBumCig") {
        text = "—É —Ç–µ–±—è –Ω–µ—Ç —Å–∏–≥ –∏ —Ç—ã —Ö–æ—á–µ—à—å —Å–∏–≥—É";
        bot.sendMessage (chatId,text)
    }
    if (query.data === "wannaBumDudka") {
        text = "—É —Ç–µ–±—è –Ω–µ—Ç —Å–∏–≥ –∏ —Ç—ã —Ö–æ—á–µ—à—å –¥—É–¥–∫—É";
        bot.sendMessage (chatId,text)
    }
    if (query.data === "canGive") {
        text = "—Ö–æ—á–µ—à—å –ø–æ–∫—É—Ä –∏ –º–æ–∂–µ—à—å —Å—Ç—Ä–µ–ª—å–Ω—É—Ç—å. –ö—Ä–∞—Å–∞–≤—á–∏–∫!";
        bot.sendMessage (chatId,text)
    }

    }); */
